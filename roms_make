#! /usr/bin/env bash

# Script to build the ROMS/TOMS model, versions 3.0 and later

set -e

# Process command-line switches

while getopts "dgmo" opt
do
  case "${opt}" in
    d)
      print=1
      ;;
    g)
      use_debug=1
      ;;
    m)
      use_mpi=1
      ;;
    o)
      use_omp=1
      ;;
  esac
done
shift $(( ${OPTIND}-1 ))

# The FORT variable should have been inherited from the caller. If
# that is not available we try the FC variable.

if test -z "${FORT}"
then
  if test -n "${FC}"
  then
    export FORT=${FC}
  else
    echo "FORT has not been set" 1>&2
    exit 1
  fi
fi

# Specify scratch directory, based on system and compiler name.

scratch_dir=Build-$(uname -s -m | tr " " "-")-$(basename ${FORT})
if test -n "${use_mpi}"
then
  scratch_dir=${scratch_dir}-MPI
fi
if test -n "${use_omp}"
then
  scratch_dir=${scratch_dir}-OMP
fi
if test -n "${use_debug}"
then
  scratch_dir=${scratch_dir}-debug
fi

# If -d switch was set, print build directory and return

if test -n "${print}"
then
  echo $scratch_dir
  exit
fi

# OK, ready to build

# Run the make command. Alternative versions of each cpp macro are
# provided because of a change in the ROMS source ~ SVN release 44.

echo "Running make in "${PWD}" with SCRATCH_DIR="${scratch_dir}

if test -n "${use_debug}"
then
  make_args=${make_args}" DEBUG=on USE_DEBUG=on"
fi

if test -n "${use_mpi}"
then
  make_args=${make_args}" MPI=on USE_MPI=on"
fi

if test -n "${use_omp}"
then
  make_args=${make_args}" OpenMP=on USE_OpenMP=on"
fi

make ${make_args} BINDIR=${scratch_dir} SCRATCH_DIR=${scratch_dir} "$@"
